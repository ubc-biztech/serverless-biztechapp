'use strict';
const AWS = require("aws-sdk"); 
const AWSMock = require('aws-sdk-mock');

// tests for eventCreate
// Generated by serverless-mocha-plugin

const mochaPlugin = require('serverless-mocha-plugin');
const expect = mochaPlugin.chai.expect;
let wrapped = mochaPlugin.getWrapper('eventCreate', '/handlers/event.js', 'create');

AWSMock.setSDKInstance(AWS);
AWSMock.mock('DynamoDB.DocumentClient', 'putItem', function (params, callback){
  if (params.Key.id == 332332) {
    Promise.resolve(
      callback(null, {
        Item: 'not null user'
      } 
    ));
  }
});

const eventPayload = {
  id: 'testEvent',
  ename: 'testEvent',
  description: 'Test event description',
  startDate: '20200607T000000-0400',
  endDate: '20200607T000000-0400',
  capac: 100,
  facebookUrl: 'https://www.facebook.com/BizTechUBC/',
  imageUrl: 'https://www.facebook.com/BizTechUBC/',
  elocation: 'https://i.picsum.photos/id/320/200/300.jpg',
  longitude: -120.00,
  latitude: 78.00,
  createdAt: '20200607T000000-0400',
  updatedAt: '20200607T000000-0400'
}

describe('eventCreate', () => {
  before((done) => {
    done();
  });

  it('implement tests here', async () => {
    const invalidPayload = {
      ...eventPayload,
      id: null,
    }
    const response = await wrapped.run({ body: JSON.stringify(invalidPayload) });
    expect(response.statusCode).to.be.equal(409);
    
  });
});


AWSMock.restore('DynamoDB.DocumentClient');