'use strict';

// tests for userGet
// Generated by serverless-mocha-plugin

const mochaPlugin = require('serverless-mocha-plugin');
const expect = mochaPlugin.chai.expect;
const AWSMock = require('aws-sdk-mock');
let wrapped = mochaPlugin.getWrapper('userGetAll', '/handlers/user.js', 'getAll');


describe('userGetAll', () => {
  afterEach(() => {
    AWSMock.restore('DynamoDB.DocumentClient');
  });

  it('successfully returns 200 get all user', async () => {
    const users = [{
      ename: 'some random user'
    }, {
      ename: 'another random user'
    }];
    AWSMock.mock('DynamoDB.DocumentClient', 'scan', function (params, callback){
        Promise.resolve(
            callback(null, {
                Items: users,
                ScannedCount: 2
            })
        )
      });
    const response = await wrapped.run();
    expect(response).to.not.be.empty;
    expect(response.statusCode).to.equal(200);
    const body = JSON.parse(response.body)
    expect(body.items.length).to.equal(2);
    expect(body.length).to.equal(2)
  });

  it('return 404 when users not found', async () => {
    AWSMock.mock('DynamoDB.DocumentClient', 'scan', function (params, callback){
        Promise.resolve(
            callback(null, {
                Items: null
            })
        )
      });
      const response = await wrapped.run();
      expect(response).to.not.be.empty;
      expect(response.statusCode).to.equal(404);
  }) 
});
