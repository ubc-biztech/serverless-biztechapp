'use strict';
const AWSMock = require('aws-sdk-mock');

// tests for userDelete
// Generated by serverless-mocha-plugin

const mochaPlugin = require('serverless-mocha-plugin');
const expect = mochaPlugin.chai.expect;
let wrapped = mochaPlugin.getWrapper('userDelete', '/handlers/user.js', 'delete');

describe('userDelete', () => {

  before(() => {

    AWSMock.mock('DynamoDB.DocumentClient', 'delete', (params, callback) => {

      if(params.Key.id && params.TableName == 'biztechUsers' + process.env.ENVIRONMENT) {

        callback(null, 'successfully deleted item in database');

      }
      else callback(new Error(''));

    });

  });

  after(() => {

    AWSMock.restore('DynamoDB.DocumentClient');

  });

  it('return 406 for trying to delete a user with no id', async () => {


    const response = await wrapped.run({ pathParameters: {} });
    expect(response.statusCode).to.be.equal(406);

  });

  it('return 200 for successfully deleting a user', async () => {

    const validId = 'userId';

    const response = await wrapped.run({ pathParameters: { id: validId } });
    expect(response.statusCode).to.be.equal(200);

  });

});
