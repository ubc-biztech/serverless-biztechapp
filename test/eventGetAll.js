'use strict';
const AWSMock = require('aws-sdk-mock');

// tests for eventGetAll
// Generated by serverless-mocha-plugin

const mochaPlugin = require('serverless-mocha-plugin');
const expect = mochaPlugin.chai.expect;
let wrapped = mochaPlugin.getWrapper('eventGetAll', '/handlers/event.js', 'getAll');

const getEventsResponse = require('./data/events.json');
const getRegistrationResponse = require('./data/eventRegistration.json');

describe('eventGetAll', () => {

  before(() => {

    AWSMock.mock('DynamoDB.DocumentClient', 'scan', (params, callback) => {
      // event counts
      if(params.TableName.includes('biztechRegistration')) {
        callback(null, getRegistrationResponse);
      }
      // events itself
      else if(params.TableName.includes('biztechEvents')){
        callback(null, getEventsResponse);
      }

    });
    
  });
  after(() => {

    AWSMock.restore('DynamoDB.DocumentClient');

  });

  it('return 200 response for getting all events', async () => {


    const response = await wrapped.run();
    expect(response.statusCode).to.be.equal(200);

    const body = JSON.parse(response.body);
    const event = body[0];
    expect(event).to.have.property('id');

    expect(event.counts).to.have.property('registeredCount', 2);
    expect(event.counts).to.have.property('checkedInCount', 3);
    expect(event.counts).to.have.property('waitlistCount', 1);
    
  });

});