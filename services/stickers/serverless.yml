service: biztechApi-stickers
tenant: ianmh
app: biztechapp

plugins:
  - serverless-domain-manager
  - serverless-bundle
  - serverless-prune-plugin
  - serverless-mocha-plugin

provider:
  name: aws
  stage: ${file(../../serverless.common.yml):provider.stage}
  runtime: ${file(../../serverless.common.yml):provider.runtime}
  region: ${file(../../serverless.common.yml):provider.region}
  cfLogs: true
  environment:
    ENVIRONMENT: ${file(../../config.${self:provider.stage}.json):ENVIRONMENT}
    stickerImagesBucket: biztech-images-staging
    region: ${file(../../serverless.common.yml):provider.region}

  apiGateway:
    restApiId: !ImportValue ${self:provider.stage}-ExtApiGatewayRestApiId
    restApiRootResourceId: !ImportValue ${self:provider.stage}-ExtApiGatewayRestApiRootResourceId

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - s3:PutObject
        - s3:PutObjectAcl
        - s3:DeleteObject
        - s3:DeleteObjectAcl
      Resource:
        - "arn:aws:dynamodb:us-west-2:432714361962:table/biztechStickers${self:provider.environment.ENVIRONMENT}"
        - "arn:aws:s3:::biztech-images-${file(../../config.${self:provider.stage}.json):BUCKET}/*"

custom:
    ${file(../../serverless.common.yml):custom}

functions:
  stickersGetAll:
    handler: handler.getAll
    events:
      - http:
          path: stickers/
          method: get
          cors: true
          authorizer:
            name: ${self:service}-authorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:us-west-2:432714361962:userpool/us-west-2_w0R176hhp
  stickersCreate:
    handler: handler.create
    events:
      - http:
          path: stickers/
          method: post
          cors: true
          authorizer:
            name: ${self:service}-authorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:us-west-2:432714361962:userpool/us-west-2_w0R176hhp
  stickersGet:
    handler: handler.get
    events:
      - http:
          path: stickers/{id}
          method: get
          request:
            parameters:
              path:
                id: true
          cors: true
          authorizer:
            name: ${self:service}-authorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:us-west-2:432714361962:userpool/us-west-2_w0R176hhp
  stickersUpdate:
    handler: handler.update
    events:
      - http:
          path: stickers/{id}
          method: patch
          request:
            parameters:
              path:
                id: true
          cors: true
          authorizer:
            name: ${self:service}-authorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:us-west-2:432714361962:userpool/us-west-2_w0R176hhp
  stickersDelete:
   handler: handler.del
   events:
     - http:
          path: stickers/{id}
          method: delete
          request:
            parameters:
              path:
                id: true
          cors: true
          authorizer:
            name: ${self:service}-authorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:us-west-2:432714361962:userpool/us-west-2_w0R176hhp