service: biztechApi-registrations
tenant: ianmh
app: biztechapp
plugins:
  - serverless-dynamodb
  - serverless-offline
  - serverless-domain-manager
  - serverless-bundle
  - serverless-prune-plugin
  - serverless-mocha-plugin
provider:
  name: aws
  stage: ${file(../../serverless.common.yml):provider.stage}
  runtime: ${file(../../serverless.common.yml):provider.runtime}
  region: ${file(../../serverless.common.yml):provider.region}
  cfLogs: true
  environment:
    ENVIRONMENT: ${file(../../config.${self:provider.stage}.json):ENVIRONMENT}
    NODE_ENV: ${env:NODE_ENV}
    SNS_TOPIC_ARN: arn:aws:sns:us-west-2:432714361962:slackbot
  apiGateway:
    restApiId: !ImportValue ${self:provider.stage}-ExtApiGatewayRestApiId
    restApiRootResourceId: !ImportValue ${self:provider.stage}-ExtApiGatewayRestApiRootResourceId
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:us-west-2:432714361962:table/biztechRegistrations${self:provider.environment.ENVIRONMENT}"
        - "arn:aws:dynamodb:us-west-2:432714361962:table/biztechRegistrations${self:provider.environment.ENVIRONMENT}/index/event-query"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
      Resource:
        - "arn:aws:dynamodb:us-west-2:432714361962:table/biztechUsers${self:provider.environment.ENVIRONMENT}"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
      Resource:
        - "arn:aws:dynamodb:us-west-2:432714361962:table/biztechEvents${self:provider.environment.ENVIRONMENT}"
    - Effect: Allow
      Action:
        - ses:SendRawEmail
      Resource:
        - "arn:aws:ses:us-west-2:432714361962:identity/dev@ubcbiztech.com"
        - "arn:aws:ses:us-west-2:432714361962:configuration-set/my-first-configuration-set"
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - "arn:aws:sns:us-west-2:432714361962:slackbot"
custom: ${file(../../serverless.common.yml):custom}
functions:
  registrationPost:
    handler: handler.post
    events:
      - http:
          path: registrations/
          method: post
          cors: true
  registrationPut:
    handler: handler.put
    events:
      - http:
          path: registrations/{email}/{fname}
          method: put
          request:
            path:
              email: true
              fname: true
          cors: true
  registrationGet:
    handler: handler.get
    events:
      - http:
          path: registrations/
          method: get
          request:
            parameters:
              querystrings:
                eventID: false
                year: false
                email: false
                afterTimestamp: false
          cors: true
  registrationDelete:
    handler: handler.del
    events:
      - http:
          path: registrations/{email}
          method: delete
          request:
            path:
              email: true
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: ${cf:biztechApi-${file(../../serverless.common.yml):provider.stage}.CognitoAuthorizer-${self:provider.stage}}
  leaderboardGet:
    handler: handler.leaderboard
    events:
      - http:
          path: registrations/leaderboard/
          method: get
          request:
            parameters:
              querystrings:
                eventID: false
                year: false
          cors: true
  massUpdateRegistration:
    handler: handler.massUpdate
    events:
      - http:
          path: registrations/massUpdate
          method: put
          cors: true
