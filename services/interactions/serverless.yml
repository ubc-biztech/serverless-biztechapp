service: biztechApi-interactions
app: biztechapp

plugins:
  - serverless-dynamodb
  - serverless-offline
  - serverless-domain-manager
  - serverless-bundle
  - serverless-prune-plugin
  - serverless-mocha-plugin

provider:
  name: aws
  stage: ${file(../../serverless.common.yml):provider.stage}
  runtime: ${file(../../serverless.common.yml):provider.runtime}
  region: ${file(../../serverless.common.yml):provider.region}
  cfLogs: true
  environment:
    ENVIRONMENT: ${file(../../config.${self:provider.stage}.json):ENVIRONMENT}
    NODE_ENV: ${env:NODE_ENV}
  timeout: 15 # in seconds
  apiGateway:
    restApiId: !ImportValue ${self:provider.stage}-ExtApiGatewayRestApiId
    restApiRootResourceId: !ImportValue ${self:provider.stage}-ExtApiGatewayRestApiRootResourceId

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - "arn:aws:dynamodb:us-west-2:432714361962:table/bizConnections${self:provider.environment.ENVIRONMENT}"
        - "arn:aws:dynamodb:us-west-2:432714361962:table/bizConnections${self:provider.environment.ENVIRONMENT}/index/eventID-year"
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - "arn:aws:dynamodb:us-west-2:432714361962:table/biztechNFCScans${self:provider.environment.ENVIRONMENT}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:PutItem
      Resource:
        - "arn:aws:dynamodb:us-west-2:432714361962:table/bizQuests${self:provider.environment.ENVIRONMENT}"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
      Resource:
        - "arn:aws:dynamodb:us-west-2:432714361962:table/biztechProfiles${self:provider.environment.ENVIRONMENT}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
      Resource:
        - "arn:aws:dynamodb:us-west-2:432714361962:table/biztechQRs${self:provider.environment.ENVIRONMENT}"

custom: ${file(../../serverless.common.yml):custom}

functions:
  interactionCreate:
    handler: handler.postInteraction
    events:
      - http:
          path: interactions/
          method: post
          cors: true
          authorizer:
            name: ${self:service}-authorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:us-west-2:432714361962:userpool/us-west-2_w0R176hhp

  interactionJournalGetAll:
    handler: handler.getAllConnections
    events:
      - http:
          path: interactions/journal/
          method: get
          cors: true
          authorizer:
            name: ${self:service}-authorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:us-west-2:432714361962:userpool/us-west-2_w0R176hhp

  interactionQuestsGetAll:
    handler: handler.getAllQuests
    events:
      - http:
          path: interactions/quests/
          method: get
          cors: true
          authorizer:
            name: ${self:service}-authorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:us-west-2:432714361962:userpool/us-west-2_w0R176hhp
