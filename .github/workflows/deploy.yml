name: Deploy on merge
'on':
  push:
    branches: [ dev, master ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      
      # Remove this cache step as we're going to clean node_modules for Node 18 upgrade #355
      # - name: Cache node modules
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      - name: Clean install dependencies
        run: |
          rm -rf node_modules
          npm ci
      
      - name: Install Serverless CLI
        run: sudo npm i -g serverless
      
      - name: 'Deploy Dev'
        if: github.ref == 'refs/heads/dev'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          SENDGRID_KEY: ${{ secrets.SENDGRID_KEY }}
          STRIPE_DEV_CANCEL: ${{ secrets.STRIPE_DEV_CANCEL }}
          STRIPE_DEV_ENDPOINT: ${{ secrets.STRIPE_DEV_ENDPOINT }}
          STRIPE_PROD_CANCEL: ${{ secrets.STRIPE_PROD_CANCEL }}
          STRIPE_PROD_ENDPOINT: ${{ secrets.STRIPE_PROD_ENDPOINT }}
          STRIPE_PROD_KEY: ${{ secrets.STRIPE_PROD_KEY}}
          STRIPE_DEV_KEY: ${{ secrets.STRIPE_DEV_KEY}}
        run: |
          cd services
          for DIR in *; do
            (cd $DIR && sls deploy --conceal \
              --STRIPE_DEV_CANCEL ${{ secrets.STRIPE_DEV_CANCEL }} \
              --STRIPE_DEV_ENDPOINT ${{ secrets.STRIPE_DEV_ENDPOINT }} \
              --STRIPE_PROD_CANCEL ${{ secrets.STRIPE_PROD_CANCEL }} \
              --STRIPE_PROD_ENDPOINT ${{ secrets.STRIPE_PROD_ENDPOINT }} \
              --STRIPE_PROD_KEY ${{ secrets.STRIPE_PROD_KEY }} \
              --STRIPE_DEV_KEY ${{ secrets.STRIPE_DEV_KEY }} \
            && cd ..) & done; wait

      - name: 'Deploy Prod'
        if: github.ref == 'refs/heads/master'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          SENDGRID_KEY: ${{ secrets.SENDGRID_KEY }}
          STRIPE_DEV_CANCEL: ${{ secrets.STRIPE_DEV_CANCEL }}
          STRIPE_DEV_ENDPOINT: ${{ secrets.STRIPE_DEV_ENDPOINT }}
          STRIPE_PROD_CANCEL: ${{ secrets.STRIPE_PROD_CANCEL }}
          STRIPE_PROD_ENDPOINT: ${{ secrets.STRIPE_PROD_ENDPOINT }}
          STRIPE_PROD_KEY: ${{ secrets.STRIPE_PROD_KEY}}
          STRIPE_DEV_KEY: ${{ secrets.STRIPE_DEV_KEY}}
        run: |
          cd services
          for DIR in *; do
            (cd $DIR && sls deploy --stage prod --conceal \
              --STRIPE_DEV_CANCEL ${{ secrets.STRIPE_DEV_CANCEL }} \
              --STRIPE_DEV_ENDPOINT ${{ secrets.STRIPE_DEV_ENDPOINT }} \
              --STRIPE_PROD_CANCEL ${{ secrets.STRIPE_PROD_CANCEL }} \
              --STRIPE_PROD_ENDPOINT ${{ secrets.STRIPE_PROD_ENDPOINT }} \
              --STRIPE_PROD_KEY ${{ secrets.STRIPE_PROD_KEY }} \
              --STRIPE_DEV_KEY ${{ secrets.STRIPE_DEV_KEY }} \
            && cd ..) & done; wait
