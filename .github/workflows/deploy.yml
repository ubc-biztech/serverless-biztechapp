name: Deploy on merge
"on":
  push:
    branches: [dev, master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: "20.7"

      # https://help.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Serverless CLI and dependencies
        run: |
          sudo npm i -g serverless@3 --legacy-peer-deps
          npm ci --legacy-peer-deps

      - name: "Deploy Dev"
        if: github.ref == 'refs/heads/dev'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          STRIPE_DEV_CANCEL: ${{ secrets.STRIPE_DEV_CANCEL }}
          STRIPE_DEV_ENDPOINT: ${{ secrets.STRIPE_DEV_ENDPOINT }}
          STRIPE_PROD_CANCEL: ${{ secrets.STRIPE_PROD_CANCEL }}
          STRIPE_PROD_ENDPOINT: ${{ secrets.STRIPE_PROD_ENDPOINT }}
          STRIPE_PROD_KEY: ${{ secrets.STRIPE_PROD_KEY}}
          STRIPE_DEV_KEY: ${{ secrets.STRIPE_DEV_KEY}}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          OPENAI_API_KEY: ${env:OPENAI_API_KEY}
        run: |
          cd services
          pids=()

          for DIR in *; do
            cd "$DIR"
            sls deploy --conceal --stage dev &
            pid=$!
            pids+=("$pid")
            cd ..
          done

          for pid in "${pids[@]}"; do
            wait "$pid" || exit 1
          done

      - name: "Deploy Prod"
        if: github.ref == 'refs/heads/master'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          STRIPE_DEV_CANCEL: ${{ secrets.STRIPE_DEV_CANCEL }}
          STRIPE_DEV_ENDPOINT: ${{ secrets.STRIPE_DEV_ENDPOINT }}
          STRIPE_PROD_CANCEL: ${{ secrets.STRIPE_PROD_CANCEL }}
          STRIPE_PROD_ENDPOINT: ${{ secrets.STRIPE_PROD_ENDPOINT }}
          STRIPE_PROD_KEY: ${{ secrets.STRIPE_PROD_KEY}}
          STRIPE_DEV_KEY: ${{ secrets.STRIPE_DEV_KEY}}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          OPENAI_API_KEY: ${env:OPENAI_API_KEY}
        run: |
          cd services
          pids=()

          for DIR in *; do
            cd "$DIR"
            sls deploy --conceal --stage prod &
            pid=$!
            pids+=("$pid")
            cd ..
          done

          for pid in "${pids[@]}"; do
            wait "$pid" || exit 1
          done
