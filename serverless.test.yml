- name: default responds with 200 and Yeet
  endpoint: {function: hello}
  response:
    status: 200
    body: 
      message: "Yeet!"

# THIS FUNCTION WORKS, BUT THE TEST DOES NOT BECAUSE WE DON'T HAVE A USER DELETE
#- name: user create returns 201
#  endpoint:
#    method: POST
#    path: users/
#  request:
#    body:
#      id: 69696969
#      fname: insanetest
#      lname: dude
#      faculty: Science
#      email: test@dude.asd
#  response:
#    status: 201
#    body:
#      message: 'Created!'

# THIS FUNCTION WORKS, BUT THE TEST DOES NOT BECAUSE WE DON'T HAVE A USER DELETE
#- name: user create already exists returns 409
#  endpoint:
#    method: POST
#    path: users/
#  request:
#    body:
#      id: 69696969
#      fname: test
#      lname: dudealreadyexists
#      faculty: Science
#      email: test@dude.asd
#  response:
#    status: 409
#    body:
#      message: 'User could not be created because id already exists'

- name: user create no ID returns 406
  endpoint:
    method: POST
    path: users/
  request:
    body:
      fname: foo
      lname: bar
      email: foo
      faculty: bar
  response:
    status: 406
    body:
      message: "User ID not specified."
      data:
        fname: foo
        lname: bar
        email: foo
        faculty: bar


# THIS FUNCTION WORKS, BUT THE TEST DOES NOT BECAUSE IT IS DEPENDENT ON OTHER TESTS (BAD PRACTICE)
#- name: user get found returns 200
#  endpoint:
#    method: GET
#    path: users/144444
#  response:
#    status: 200
#    body:
#      id: 144444
#      fname: test
#      lname: dude
#      faculty: Science

- name: users get all returns 200
  endpoint:
    method: GET
    path: users/
  response:
    status: 200

- name: user get not found returns 404
  endpoint:
    method: GET
    path: users/0
  response:
    status: 404
    body: "\"User not found.\""

- name: user update returns 200
  endpoint:
    method: PATCH
    path: users/144444
  request:
    body:
      fname: updateTest
      lname: dudeGotUpdated
      faculty: Sauder
      email: dev@ubcbiztech.com
  response:
    status: 200
    body: "\"Update succeeded.\""

- name: user get update info returns 200
  endpoint:
    method: GET
    path: users/144444
  response:
    status: 200
    body:
      id: 144444
      fname: updateTest
      lname: dudeGotUpdated
      faculty: Sauder

- name: user update not found returns 404
  endpoint:
    method: PATCH
    path: users/-20
  request:
    body:
      fname: badUpdateTest
      lname: dudeNotUpdated
  response:
    status: 404
    body: "\"User not found.\""

#- name: event count returns 200
#  endpoint: {function: eventCount}
#  request:
#    form:
#      id: bp
#  response:
#    status: 200

- name: event create returns 201
  endpoint:
    method: POST
    path: events/
  request:
    body:
      id: testevent
      ename: test
      capac: 2000000
      img: yup
  response:
    status: 201
    body:
      message: 'Event Created!'

- name: event create already exists returns 409
  endpoint:
    method: POST
    path: events/
  request:
    body:
      id: testevent
      ename: test
      capac: 200
      img: yup
    response:
      status: 409
      body:
        message: 'Event could not be created because id already exists'

- name: event get with no additional params returns 200
  endpoint:
    method: GET
    path: events/testevent
  response:
    status: 200

- name: event get with counts true and users true returns 406
  endpoint:
    method: GET
    path: events/testevent
  request:
    form:
      count: true
      users: true
  response:
    status: 406

- name: events get with counts true and users false returns 200
  endpoint:
    method: GET
    path: events/testevent
  request:
    form:
      count: true
      users: false
  response:
    status: 200

- name: events get with counts false and users true returns 200
  endpoint:
    method: GET
    path: events/testevent
  request:
    form:
      count: false
      users: true
  response:
    status: 200

- name: event create no ID returns 406
  endpoint:
    method: POST
    path: events/
  request:
    body:
      ename: test
      capac: 2000000
      img: yup
  response:
    status: 406
    body:
      message: 'Event ID not specified.'
      data:
        ename: test
        capac: 2000000
        img: yup

- name: event create no capac returns 406
  endpoint:
    method: POST
    path: events/
  request:
    body:
      id: testevent
      ename: test
      img: yup
  response:
    status: 406
    body:
      message: 'capac invalid, please provide valid number.'
      data:
        id: testevent
        ename: test
        img: yup

- name: event get all returns 200
  endpoint:
    method: GET
    path: events/
  response:
    status: 200

- name: event update returns 200
  endpoint:
    method: PATCH
    path: events/testevent
  request:
    body:
      ename: testUpdated
      capac: 7
      img: nope
  response:
    status: 200
    body: "\"Update succeeded.\""

- name: event update not found returns 404
  endpoint:
    method: PATCH
    path: events/thisiddoesnotexist
  request:
    body:
      ename: testUpdated
      capac: 7
      img: nope
  response:
    status: 404
    body: "\"Event not found.\""

- name: registration create returns 200
  endpoint:
    method: POST
    path: registration/create
  request:
    body:
      eventID: testevent
      id: 144444
      registrationStatus: registered
  response:
    status: 200
    body:
      message: Update succeeded
      registrationStatus: registered

- name: registration create no id returns 406
  endpoint:
    method: POST
    path: registration/create
  request:
    body:
      eventID: testevent
      registrationStatus: registered
  response:
    status: 406
    body:
      message: 'Registration student ID not specified.'

- name: registration create no eventID returns 406
  endpoint:
    method: POST
    path: registration/create
  request:
    body:
      id: 144444
      registrationStatus: registered
  response:
    status: 406
    body:
      message: 'Registration event ID not specified.'

- name: registration create no status returns 406
  endpoint:
    method: POST
    path: registration/create
  request:
    body:
      eventID: testevent
      id: 144444
  response:
    status: 406
    body:
      message: 'Status not specified.'

- name: registration create 'registered' with full event sets registrationStatus to waitlist
  endpoint:
    method: POST
    path: registration/create
  request:
    body:
      eventID: usingfortestdonotmodify
      id: 144444
      registrationStatus: registered
  response:
    status: 200
    body:
      message: "Update succeeded"
      registrationStatus: "waitlist"

- name: registration create 'checkedin' with full event sets registrationStatus to checkedin
  endpoint:
    method: POST
    path: registration/create
  request:
    body:
      eventID: usingfortestdonotmodify
      id: 144444
      registrationStatus: checkedin
  response:
    status: 200
    body:
      message: "Update succeeded"
      registrationStatus: "checkedin"

# THIS FUNCTION SHOULD WORK IN JACQUES PR, IT FAILS DUE TO SOMETHING THAT'S IN THE DATABASE FOR MY (DEREK) PR
#- name: registration queryStudent returns 200
#  endpoint:
#    method: GET
#    path: registration/queryStudent
#  request:
#    form:
#      id: 144444
#  response:
#    status: 200
#    body:
#      size: 2

- name: registration queryStudent no match returns 200
  endpoint:
    method: GET
    path: registration/queryStudent
  request:
    form:
      id: -1
  response:
    status: 200
    body:
      size: 0

- name: registration queryStudent no ID returns 406
  endpoint:
    method: GET
    path: registration/queryStudent
  request:
    form:
  response:
    status: 406
    message: 'Student ID not specified.'

- name: registration scanEvent returns 200
  endpoint:
    method: GET
    path: registration/scanEvent
  request:
    form:
      eventID: testevent
  response:
    status: 200
    body:
      size: 1

- name: registration scanEvent no match returns 200
  endpoint:
    method: GET
    path: registration/scanEvent
  request:
    form:
      eventID: nonexistanttestidwoo
  response:
    status: 200
    body:
      size: 0

- name: registration scanEvent no ID returns 406
  endpoint:
    method: GET
    path: registration/scanEvent
  request:
    form:
  response:
    status: 406
    message: 'Event ID not specified.'

- name: event delete returns 200
  endpoint:
    method: DELETE
    path: events/testevent
  response:
    status: 200
    body:
      message: 'Event Deleted!'

- name: event update after delete not found returns 404
  endpoint:
    method: PATCH
    path: events/testevent
  request:
    body:
      ename: testUpdated
      capac: 7
      img: nope
      code: test
  response:
    status: 404
    body: "\"Event not found.\""

- name: invitecodes returns 200
  endpoint:
    method: POST
    path: inviteCodes/
  request:
    body: